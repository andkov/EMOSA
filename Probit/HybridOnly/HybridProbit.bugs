model {
	for( i in 1:(timeCount-1) ) {
		pgHat[i+1] <- pg[i] 
			+ (Tig * pi[i] * pow(pg[i], Cig)) 
			+ (Tag * pa[i] * pow(pg[i], Cag)) 
			- (Tgi * pg[i] * pow(pi[i], Cgi)) 
			- (Tga * pg[i] * pow(pa[i], Cga))
		
		piHat[i+1] <- pi[i] 
			+ (Tgi * pg[i] * pow(pi[i], Cgi)) 
			+ (Tai * pi[i] * pow(pa[i], Cai)) 
			- (Tig * pi[i] * pow(pg[i], Cig))  
			- (Tia * pi[i] * pow(pa[i], Cia))
				
		#paHat[i+1] <- 1 - pgHat[i+1] - piHat[i+1]
		
		#pgAlpha[i+1] <- pgHat[i+1] * sumG
		#pgBeta[i+1] <- (1 - pgHat[i+1]) * sumG
		#pg[i+1] ~ dbeta(pgAlpha[i+1], pgBeta[i+1])
		
		pgHatBounded[i+1] <- max(.0001, min(.9999, pgHat[i+1]))
		zgHat[i+1] <- qnorm(pgHatBounded[i+1], 0, 1)
		zg[i+1] ~ dnorm(zgHat[i+1], .0001)

		piHatBounded[i+1] <- max(.0001, min(.9999, piHat[i+1]))
		ziHat[i+1] <- qnorm(piHatBounded[i+1], 0, 1)
		zi[i+1] ~ dnorm(ziHat[i+1], .0001)


		
#		piAlpha[i+1] <- piHat[i+1] * sumI
#		piBeta[i+1] <- (1 - piHat[i+1]) * sumI
#		pi[i+1] ~ dbeta(piAlpha[i+1], piBeta[i+1])
	}

#	sumG ~ dunif(0, 100000)
#	sumI ~ dunif(0, 100000)
#	sumA ~ dunif(0, 100000)
		
	alpha <- 1
	beta <- 1
	Tgi ~ dbeta(alpha, beta)
	Tga ~ dbeta(alpha, beta)	
	Tig ~ dbeta(alpha, beta)
	Tia ~ dbeta(alpha, beta)
	Tag ~ dbeta(alpha, beta)
	Tai ~ dbeta(alpha, beta)
	
	Cig ~ dbeta(alpha, beta)
	Cag ~ dbeta(alpha, beta)
	Cgi ~ dbeta(alpha, beta)
	Cga ~ dbeta(alpha, beta)
	Cai ~ dbeta(alpha, beta)
	Cia ~ dbeta(alpha, beta)
	
}	
	
