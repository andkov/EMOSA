model {
	for( i in 1:(timeCount-1) ) {
		pgHat[i+1] <- pg[i] 
			- (kgi * pg[i]) - (Tgi *( pi[i]/(1-pg[i]))) 
			- (kga * pg[i]) - (Tga *( pa[i]/(1-pg[i]))) 
			+ (kig * pi[i]) + (Tig *( pg[i]/(1-pi[i]))) 
			+ (kag * pa[i]) + (Tag *( pg[i]/(1-pa[i]))) 
		
		piHat[i+1] <- pi[i] 
			- (kig * pg[i]) - (Tig *( pg[i]/(1-pi[i]))) 
			- (kia * pi[i]) - (Tia *( pa[i]/(1-pi[i]))) 
			+ (kgi * pi[i]) + (Tig *( pi[i]/(1-pg[i]))) 
			+ (kai * pa[i]) + (Tag *( pi[i]/(1-pa[i]))) 
				
#		paHat[i+1] <- 1 - pgHat[i+1] - piHat[i+1]
		
		pgAlpha[i+1] <- pgHat[i+1] * sumG
		pgBeta[i+1] <- (1 - pgHat[i+1]) * sumG
		pg[i+1] ~ dbeta(pgAlpha[i+1], pgBeta[i+1])
		
		piAlpha[i+1] <- piHat[i+1] * sumI
		piBeta[i+1] <- (1 - piHat[i+1]) * sumI
		pi[i+1] ~ dbeta(piAlpha[i+1], piBeta[i+1])
	}

	sumG ~ dunif(0, 100000)
	sumI ~ dunif(0, 100000)
#	sumA ~ dunif(0, 100000)
		
	alpha <- 1
	beta <- 1
	
	kig ~ dbeta(alpha, beta)
	kag ~ dbeta(alpha, beta)
	kgi ~ dbeta(alpha, beta)
	kga ~ dbeta(alpha, beta)
	kai ~ dbeta(alpha, beta)
	kia ~ dbeta(alpha, beta)
	
	Tgi ~ dbeta(alpha, beta)
	Tga ~ dbeta(alpha, beta)	
	Tig ~ dbeta(alpha, beta)
	Tia ~ dbeta(alpha, beta)
	Tag ~ dbeta(alpha, beta)
	Tai ~ dbeta(alpha, beta)


	
}	
	
